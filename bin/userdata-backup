#!/bin/bash

: ${BORGMATIC_CREATE_LOG_DIRSPEC:="/var/log/${USER}/borgmatic"}
: ${USERDATABACKUP_SUBJECT=userdata}
: ${USERDATABACKUP_DEFAULT_STORAGE_QUOTA=512G}
: ${USERDATABACKUP_FRESH_BACKUP_INTERVAL=14d}

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 'ERROR: Cannot determine script directory!'; exit 3; }
readonly projectDir="${scriptDir}/.."
readonly etcDir="${projectDir}/etc"
readonly borgmaticConfigTemplateFilespec="${etcDir}/config.yaml.shelltemplate"
readonly borgmaticConfigFilespec=~/.config/borgmatic/config.yaml
readonly borgmaticPassphraseFilespec=~/.config/borgmatic/passphrase
readonly excludesTemplateFilespec="${etcDir}/excludes"
readonly excludesFilespec=~/.config/borgmatic/excludes
readonly borgExcludesFilespec=~/.config/borgmatic/borg-excludes
readonly userdataBackupLogFilespecGlob="${BORGMATIC_CREATE_LOG_DIRSPEC}/${USERDATABACKUP_SUBJECT}-*"

printUsage()
{
    cat <<HELPTEXT
Create a backup / execute backup action for all user data [of the passed USER].
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--for USER] [BORGMATIC-ACTIONS: init|prune|create|check|extract|list|info|offer ...] [-n|--dry-run] [BORGMATIC-OPTIONS ...] [-?|-h|--help]'
}

abortWithInitInstructions()
{
    local hostname="$(readableHostname --fallback "${USER-system}")"
    cat <<EOF
On the backup server, create the backup location via:
$ sudo install --owner backup --group users --mode 777 --directory /volume1/backup/${hostname}
$ sudo ln -s /volume1/backup/${hostname} /var/services/homes/backup/${hostname}
Then, initialize the repository via \$ $(basename -- "${BASH_SOURCE[0]}") init
EOF
    exit 2
}

typeset -a borgmaticArgs=()
typeset -a borgmaticDryRunArg=()
typeset -a borgmaticActions=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--for)		shift; targetUser="${1:?}"; shift; exec sudoWithUnixhome --set-home --user "$targetUser" "${BASH_SOURCE[0]}" "${borgmaticActions[@]}" "${borgmaticDryRunArg[@]}" "${borgmaticArgs[@]}" "$@";;
	init|prune|create|check|extract|list|info|offer)
			borgmaticActions+=("$1"); shift;;
	--dry-run|-n)	borgmaticDryRunArg+=("$1"); shift;;
	--)		borgmaticArgs+=("$1"); shift; break;;
	*)		borgmaticArgs+=("$1"); shift;;
    esac
done
if [ $# -eq 0 ] && contains 'init' "${borgmaticActions[@]}"; then
    set -- --encryption repokey --storage-quota "$USERDATABACKUP_DEFAULT_STORAGE_QUOTA"
fi

if contains 'offer' "${borgmaticActions[@]}" \
    && { [ ! -r "$borgmaticConfigFilespec" ] || [ ! -r "$borgmaticPassphraseFilespec" ] || ! hasglobmatch "$userdataBackupLogFilespecGlob"; } \
then
    # Do not initialize the borgmatic configuration if we are just offering a
    # backup. The first initiation has to be done explicitly by the user.
    exit 99
fi

if [ "$borgmaticConfigTemplateFilespec" -nt "$borgmaticConfigFilespec" ]; then
    touch-p --no-create --no-update -- "$borgmaticConfigFilespec" || exit 3
    shelltemplate -- "$borgmaticConfigTemplateFilespec" "$borgmaticConfigFilespec" || exit 3
fi

if [ "$excludesTemplateFilespec" -nt "$excludesFilespec" ]; then
    addCopy --what 'borgmatic excludes config' --offer-update-or-touch --parents -- "$excludesTemplateFilespec" "$excludesFilespec"
fi

if [ "$excludesFilespec" -nt "$borgExcludesFilespec" ]; then
    # XXX: Convert the rsync-style excludes to borg style. We generally need
    # Shell-style so that "*" stops at path separators.
    # - filenames are converted to any path-depth matches by prepending "**/".
    # - /-relative addressing needs to be converted into a full path match (that's
    #   anchored to the backup root by using "." as the source directory) by
    #   removing the "/".
    sed -e 's@^[^/#]@sh:**/&@' -e 's@^/@sh:@' -- "$excludesFilespec" > "$borgExcludesFilespec" || exit 3
fi

if [ ! -r "$borgmaticPassphraseFilespec" ]; then
    printf 'ERROR: No borgmatic passphrase set yet. Create a good encryption phrase and write to %s\n' "$borgmaticPassphraseFilespec"
    echo
    abortWithInitInstructions
fi >&2

if ! contains 'init' "${borgmaticActions[@]}" && ! hasglobmatch "$userdataBackupLogFilespecGlob"; then
    abortWithInitInstructions
fi

BORGMATIC_CREATE_SOURCE_DIRSPEC="$HOME" \
BORGMATIC_SUBJECT="${USERDATABACKUP_SUBJECT:?}" \
BORGMATIC_OFFER_FRESH_BACKUP_INTERVAL="$USERDATABACKUP_FRESH_BACKUP_INTERVAL" \
    exec borgmatic-wrapper "${borgmaticActions[@]}" "${borgmaticDryRunArg[@]}" "${borgmaticArgs[@]}" "$@"
